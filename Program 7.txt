CLUSTERING USING SINGLE LINKAGE
import numpy as np
from scipy.cluster import hierarchy
ytdist = np.array([10,23,34,45,35,46,56,76,87,89,23,45,67,90,78])
z=hierarchy.linkage(ytdist,"single") dn=hierarchy.dendrogram(z) #top,bottom,left,right default=top

CLUSTERING USING COMPLETE LINKAGE
import numpy as np
from scipy.cluster import hierarchy
ytdist = np.array([10,23,34,45,35,46,56,76,87,89,23,45,67,90,78])
z=hierarchy.linkage(ytdist,"complete")
dn=hierarchy.dendrogram(z) #top,bottom,left,right default=top

CLUSTERING USING AVERAGE LINKAGE
import numpy as np
from scipy.cluster import hierarchy
ytdist = np.array([10,23,34,45,35,46,56,76,87,89,23,45,67,90,78])
z=hierarchy.linkage(ytdist,"average") dn=hierarchy.dendrogram(z) #top,bottom,left,right default=top


DBSCAN CLUSTERING ON IRIS DATASET
#1.Load data
from sklearn.datasets import load_iris iris=load_iris()

#2.DBSCAN
from sklearn.cluster import DBSCAN dbscan = DBSCAN()

#3.Input x=iris.data[:,0:2] dbscan=dbscan.fit(x)

#4.Labels
labels = dbscan.labels_

#5.Plot
import matplotlib.pyplot as plt xaxis = x[:,0]
yaxis = x[:,1] plt.title("DBSCAN")
plt.scatter(x=xaxis,y=yaxis,c=labels,cmap="rainbow")

DBSCAN CLUSTERING ON MAKE_MOONS DATASET
#1.Load data
from sklearn.datasets import make_moons makemoon=make_moons()
from pandas import DataFrame
x, y = make_moons(n_samples=100, noise=0.1)

#2.DBSCAN
from sklearn.cluster import DBSCAN dbscan = DBSCAN()
#3.Input
 dbscan=dbscan.fit(x)
#4.Labels
labels = dbscan.labels_

#5.Plot
import matplotlib.pyplot as plt xaxis = x[:,0]
yaxis = x[:,1] plt.title("DBSCAN(Make_moon dataset)")
plt.scatter(x=xaxis,y=yaxis,c=labels,cmap="rainbow")


